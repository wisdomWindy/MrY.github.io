(function(){var e={3777:function(e){function t(e){return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}t.keys=function(){return[]},t.resolve=t,t.id=3777,e.exports=t}},t={};function r(a){var s=t[a];if(void 0!==s)return s.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,r),o.exports}!function(){r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}();!function(){"use strict";const e="0.12.1",t=`https://unpkg.com/@ffmpeg/core@${e}/dist/umd/ffmpeg-core.js`;var a;(function(e){e["LOAD"]="LOAD",e["EXEC"]="EXEC",e["WRITE_FILE"]="WRITE_FILE",e["READ_FILE"]="READ_FILE",e["DELETE_FILE"]="DELETE_FILE",e["RENAME"]="RENAME",e["CREATE_DIR"]="CREATE_DIR",e["LIST_DIR"]="LIST_DIR",e["DELETE_DIR"]="DELETE_DIR",e["ERROR"]="ERROR",e["DOWNLOAD"]="DOWNLOAD",e["PROGRESS"]="PROGRESS",e["LOG"]="LOG"})(a||(a={}));const s=new Error("unknown message type"),o=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),n=(new Error("called FFmpeg.terminate()"),new Error("failed to import ffmpeg-core.js"));let E;const c=async({coreURL:e=t,wasmURL:s,workerURL:o})=>{const c=!E,i=e,p=s||e.replace(/.js$/g,".wasm"),f=o||e.replace(/.js$/g,".worker.js");try{importScripts(i)}catch{if(self.createFFmpegCore=(await r(3777)(i)).default,!self.createFFmpegCore)throw n}return E=await self.createFFmpegCore({mainScriptUrlOrBlob:`${i}#${btoa(JSON.stringify({wasmURL:p,workerURL:f}))}`}),E.setLogger((e=>self.postMessage({type:a.LOG,data:e}))),E.setProgress((e=>self.postMessage({type:a.PROGRESS,data:e}))),c},i=({args:e,timeout:t=-1})=>{E.setTimeout(t),E.exec(...e);const r=E.ret;return E.reset(),r},p=({path:e,data:t})=>(E.FS.writeFile(e,t),!0),f=({path:e,encoding:t})=>E.FS.readFile(e,{encoding:t}),R=({path:e})=>(E.FS.unlink(e),!0),d=({oldPath:e,newPath:t})=>(E.FS.rename(e,t),!0),L=({path:e})=>(E.FS.mkdir(e),!0),l=({path:e})=>{const t=E.FS.readdir(e),r=[];for(const a of t){const t=E.FS.stat(`${e}/${a}`),s=E.FS.isDir(t.mode);r.push({name:a,isDir:s})}return r},u=({path:e})=>(E.FS.rmdir(e),!0);self.onmessage=async({data:{id:e,type:t,data:r}})=>{const n=[];let D;try{if(t!==a.LOAD&&!E)throw o;switch(t){case a.LOAD:D=await c(r);break;case a.EXEC:D=i(r);break;case a.WRITE_FILE:D=p(r);break;case a.READ_FILE:D=f(r);break;case a.DELETE_FILE:D=R(r);break;case a.RENAME:D=d(r);break;case a.CREATE_DIR:D=L(r);break;case a.LIST_DIR:D=l(r);break;case a.DELETE_DIR:D=u(r);break;default:throw s}}catch(m){return void self.postMessage({id:e,type:a.ERROR,data:m.toString()})}D instanceof Uint8Array&&n.push(D.buffer),self.postMessage({id:e,type:t,data:D},n)}}()})();